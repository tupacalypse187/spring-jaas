<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/super**" access="hasAnyRole('ROLE_ADMIN','ROLE_SUPER')" />
        <intercept-url pattern="/user/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SUPER','ROLE_USER')" />

		
        <!-- access denied page -->
        <access-denied-handler error-page="/403" />
        <form-login 
            login-page="/login" 
            default-target-url="/welcome" 
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password" />
        <logout logout-success-url="/welcome?logout"  />
        <!-- enable csrf protection -->
        <csrf/>
    </http>
	
    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                                           users-by-username-query=
					"SELECT tempusername,temppassword, 'true' as enabled from userdetail WHERE tempusername=?"
                                           authorities-by-username-query=
					"SELECT tempusername,tempauthority as authorities from userdetail WHERE tempusername=?" />
        </authentication-provider>
    </authentication-manager>

</beans:beans>